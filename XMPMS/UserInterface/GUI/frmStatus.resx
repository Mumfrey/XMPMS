<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilServerList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilServerList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAk
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDBMAASwB0gUAAQECAAEDAgABBgEAAQUBDgEBARwBNAEDATsBYwEEAUEBaQEC
        ATABUQEAAQ0BGwEAAQEBAwIAAQEJAAJ/BwACAQEAAgIBAAIKAQACLQEAAlwBAAJkAQACSwEAAhYBAAIB
        bgABHwGWAgABAgIAAQYCAAENAQABBAEaAQEBFAE3AQIBOQFuAQEBTwF+AQABUgGDAQABQgFpAQIBJAFJ
        AQABBgEWAgABBwIAAQIGAAJaAQACAQEAAgIBAAIFAQACDgEAAigBAAJfAQACeQEAAn0BAAJkAQACPQEA
        Ag4BAAICAQACAWgAAREBUAEAAQEBCAEAAQEBFQEAAQgBKwEEASwBTwECATYBgAECAUcBigEAATgBWgEA
        AS0BSAEBATwBXwEKAW4BrQEEAS4BRwEAAQgBIAEAAQEBCwIAAQMDAAIwAQACBAEAAgoBAAIZAQACRwEA
        AmQBAAJ4AQACVQEAAkQBAAJbAQACqAEAAkYBAAIUAQACBQEAAgFlAAEFARgBAAEBARUBIwEkAUUBiwHS
        Af4BAgFFAZsBBAFKAYoBAAFGAW8BAAE5AVsBAAFGAW8BAAE2AVUBBgFFAWsBgQHHAfUBAwFOAXwBGgEd
        AR8CAAELAgABAwIOAQACCgEAAkEBAAL+AX4CfQEAAnoBAAJrAQACVwEAAmsBAAJRAQACaAEAAv4BXAJ4
        AQACKQEAAgQBAAIBYwABBAEQAQ8BEwG9Ac0B1wEBARQBMQECARkBKQEAAR4BLwEAARMBHgEAARYBIwEA
        ARQBIAEAARoBKQEAAQ8BGAEBASoBQwEXATsBRgEGASEBMgEXARgBJQIAAQYCAQEAAhcBAALXAbkCJgEA
        AicBAAItAQACHQEAAiIBAAIfAQACJwEAAhcBAAJBAQACSQEYAjIBAQInAQACAmEAA/8B0AHWAdkBAAEB
        AQIBmQGcAacD/wEAAgED/wMAA/8DAAP/AQABBAEHAbsBwAHEA/8BAQEOARcCAgEKA/8C2gHOAgIBAAKh
        AZkD/wIBAQAD/wMAA/8DAAP/AgcBAALDAbsD/wIXAQACB2QAA/8BdwF5AXwD/wMiAQACAQP/AWYBZwFp
        A/8DIgP/AQABBwEMAbsBwAHDA/8CRQFGBgAD/wJ7AXcD/wMiAgEBAAP/AmgBZgP/AyID/wIKAQACwgG7
        A/8CRgFFYwABAQEbASsBewF9AX4D/wG7Ab4BygEAAQUBCAEAAgED/wHdAeIB6QGIAYkBjQGZAZ0BnwP/
        AQABCQEPAbsBwgHFCf8CKQEBAn4BegP/AsQBuwIHAQACAQEAA/8C5gHdAosBiAKfAZkD/wIOAQICxQG7
        Cf9jAAP/AbsBvgHAA/8EAAIBBv8DAAb/AQEBCgERAbwBwAHHA/8DEQP/AwAD/wLAAbsD/wMAAgEBAAb/
        AwAG/wIPAQMCxQG7A/8DEQP/YAADvgP/AwAB7gHvAfAB7gHvAfIBAAIBBv8BAQEDAQQG/wECAQwBEQG7
        Ab0Bwgb/Ae4B8AHxAr8BuwP/AwAC8AHuAvEB7gIBAQAG/wIEAQEG/wIQAQQCwAG7Bv8C8QHuYgABAwE9
        AW8BjwEAAQIBIQEYASIBQQE7AWcBegEJAU0BdAEPAV4BjwFdAX0BjwGWAasBtgFxAYQBjwFRAXgBjwEC
        ASkBpgEfATQBUAEzAWkBiwIAARQBgAGJAY8CAQEAAo8BMgIPAQACPQEAAoUBJQJxAQYCgQEgAo8BWQK2
        AZUCjwFuAo8BTAJpAQACUwEAAosBKgIIAQACjwF9YgABAQEWARcBHQEAATMBUwEAAQQBKgEBARwBXQEg
        AYAB7gEDAYkB2wF2AccB9wHPAegB9wGsAdsB9wFGAboB5QFqAakB0AEXAS4BXAEAAQEBKAEGAQ8BGgES
        ATUBTQMAAiQBAAJOAQACFAEAAj8BAALJASECxQEdAvcBagL3Ac0C9wGkAuwBRQLgATgCUQEAAhEBAAIY
        AQACT2IAAQoBLwIAAQICGgEfAQEBGwEsAQABBwEkAQIBJAFaAQMBPQH9AQgBoQH/AcQB6QH/AR8BnwHj
        AQIBNQGvAQEBEQFFAQABAgEhAQABAQEPAQIBVgGLAgABAQIcAQACAQEAAiYBAAIpAQACFQEAAkQBAAKg
        AQAC4AEzAv8BwALZASwCeAEAAiwBAAIPAQACBwEAAoRlAAEYAXMFAAEBAgABBAEOASQBMwEAAQsBHgEC
        AS8BbQELAWIBvwFfAcEB/gEDATsB3QEBARgBOAEAAQMBFQIAAQkCAQEFAgABAQMAAkYHAAIBAQACNgEA
        AhUBAAJXAQACpQEAAv0BUAKQAQACLAEAAgsBAAIEAQACAmgAASYBtgsAAQEBAAECAQUBAQEVASQBAgE6
        AeMBCwFfAc4BAgEjAT0BAAEGAQ4CAAEDAgABAQkAAm4NAAIEAQACIAEAApMBAAKqAQACNwEAAgsBAAIB
        bgABMAHlAQABJgG2AQABGAFzAQABCgEvBwABBgEJAQEBGgEqAQIBHwExAQABDAETAQACAQQAAQQBEwEA
        AREBTwEAAR8BlgEAASwB0gKKAQACbgEAAkYBAAIcBwACCAEAAigBAAIvAQACEgEAAgEEAAILAQACMAEA
        AloBAAJ/YQABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/4EACw==
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAQAAAAAAAoAQAAFgAAACgAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHcHd3AAd3AARwR0cAR0cABHdHRwBH
        R3cARHBHd0dERwdEd0dHR0cEBHBHRHRHR3QEAEBAAEBEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//wAA//8AAP//AAD//wAAkOMAAJDDAACAwAAAxAAAAIACAACQAAAAtdEAAP//
        AAD//wAA//8AAP//AAD//wAA
</value>
  </data>
</root>